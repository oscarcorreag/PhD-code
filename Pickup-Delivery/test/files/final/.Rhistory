p_cdcrss_prop_c <- p_cdcrss_prop_c + geom_boxplot(fill = "#56B4E9")
p_cdcrss_prop_c <- p_cdcrss_prop_c + scale_x_discrete()
#p_cdcrss_prop_c <- p_cdcrss_prop_c + geom_hline(yintercept=1.0, linetype="twodash", color = "red", size = 1)
p_cdcrss_prop_c <- p_cdcrss_prop_c + geom_hline(yintercept=.65, linetype="twodash", color = "red", size = 1)
p_cdcrss_prop_c <- p_cdcrss_prop_c + my_theme_11()
p_cdcrss_prop_c <- p_cdcrss_prop_c + theme(axis.text = element_text(size = 8, lineheight = 0.9, colour = "black", hjust = 1), axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_cdcrss_prop_c <- p_cdcrss_prop_c + labs(x = "Stores")
p_cdcrss_prop_c <- p_cdcrss_prop_c + labs(y = "Times Current Model Service Cost")
p_cdcrss_prop_c
p_cdcrss_prop_c_2 <- ggplot(cdcrss_prop_dt[Approach == "DIST(ra)-BnB" & Stores >= 5], aes(x = Customers, y = Total.service.cost, fill = Approach))
p_cdcrss_prop_c_2 <- p_cdcrss_prop_c_2 + geom_boxplot(fill = "#56B4E9")
p_cdcrss_prop_c_2 <- p_cdcrss_prop_c_2 + scale_x_discrete()
p_cdcrss_prop_c_2 <- p_cdcrss_prop_c_2 + geom_hline(yintercept=.80, linetype="twodash", color = "red", size = 1)
p_cdcrss_prop_c_2 <- p_cdcrss_prop_c_2 + my_theme_11()
p_cdcrss_prop_c_2 <- p_cdcrss_prop_c_2 + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_cdcrss_prop_c_2 <- p_cdcrss_prop_c_2 + labs(y = "Times Current Model Service Cost")
p_cdcrss_prop_c_2
summary(cdcrss_prop_dt[Approach == "DIST(ra)-BnB" & Stores >= 5, Total.service.cost])
p_cdcrss_prop_c_3 <- ggplot(cdcrss_prop_dt[Approach == "DIST(ra)-BnB" & Stores >= 5], aes(x = Total.service.cost))
p_cdcrss_prop_c_3 <- p_cdcrss_prop_c_3 + geom_histogram(binwidth = .1, alpha = 0.2, col = I("black"))
#p_cdcrss_prop_c_3 <- p_cdcrss_prop_c_3 + scale_x_discrete()
p_cdcrss_prop_c_3 <- p_cdcrss_prop_c_3 + geom_vline(aes(xintercept=mean(Total.service.cost)), linetype="twodash", color = "red", size = 1)
p_cdcrss_prop_c_3 <- p_cdcrss_prop_c_3 + geom_text(aes(label=round(mean(Total.service.cost),2),y=0,x=mean(Total.service.cost)), vjust=-1,col='red',size=5)
p_cdcrss_prop_c_3 <- p_cdcrss_prop_c_3 + my_theme_11()
p_cdcrss_prop_c_3 <- p_cdcrss_prop_c_3 + theme(axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0), size = 10, vjust = 0.5))
p_cdcrss_prop_c_3 <- p_cdcrss_prop_c_3 + labs(x = "Times Current Model Service Cost")
p_cdcrss_prop_c_3 <- p_cdcrss_prop_c_3 + labs(y = "Frequency")
p_cdcrss_prop_c_3
#hist(cdcrss_prop_dt[Approach == "DIST(ra)-BnB" & Stores >= 5, Total.service.cost])
p_cdcrss_t <- ggplot(cdcrss[Approach == "DIST(ra)-BnB"], aes(x = Customers, y = Elapsed.time, fill = Classical))
p_cdcrss_t <- p_cdcrss_t + geom_boxplot()
p_cdcrss_t <- p_cdcrss_t + scale_x_discrete()
#p_cdcrss_t <- p_cdcrss_t + scale_y_log10()
#p_cdcrss_t <- p_cdcrss_t + geom_hline(yintercept=1.0, linetype="twodash", color = "red", size = 1)
p_cdcrss_t <- p_cdcrss_t + my_theme_01()
p_cdcrss_t <- p_cdcrss_t + scale_fill_manual(values = c("pink", "violet"))
p_cdcrss_t <- p_cdcrss_t + labs(y = "Processing time (s)")
p_cdcrss_t
#multiplot(p_cdcrss_prop_c, p_cdcrss_prop_c_3, p_cdcrss_prop_c_2, p_cdcrss_t, cols = 2)
multiplot(p_cdcrss_prop_c_2, p_cdcrss_t, cols = 2)
p_ird_prop_c <- ggplot(ird_prop_dt, aes(x = Customers, y = Total.service.cost, fill = Routing))
p_ird_prop_c <- p_ird_prop_c + geom_boxplot()
p_ird_prop_c <- p_ird_prop_c + scale_x_discrete()
p_ird_prop_c <- p_ird_prop_c + scale_y_continuous(breaks = c(.3, .5, .6, .9, 1.2, 1.5))
p_ird_prop_c <- p_ird_prop_c + geom_hline(yintercept=0.5, linetype="twodash", color = "red", size = 1)
p_ird_prop_c <- p_ird_prop_c + my_theme_11()
p_ird_prop_c <- p_ird_prop_c + scale_fill_manual(values = c("cyan", "green"))
p_ird_prop_c <- p_ird_prop_c + labs(y = expression("Times Voronoi Service Cost\nHello"))
p_ird_prop_c
p_ird_prop_c <- ggplot(ird_prop_dt, aes(x = Customers, y = Total.service.cost, fill = Routing))
p_ird_prop_c <- p_ird_prop_c + geom_boxplot()
p_ird_prop_c <- p_ird_prop_c + scale_x_discrete()
p_ird_prop_c <- p_ird_prop_c + scale_y_continuous(breaks = c(.3, .5, .6, .9, 1.2, 1.5))
p_ird_prop_c <- p_ird_prop_c + geom_hline(yintercept=0.5, linetype="twodash", color = "red", size = 1)
p_ird_prop_c <- p_ird_prop_c + my_theme_11()
p_ird_prop_c <- p_ird_prop_c + scale_fill_manual(values = c("cyan", "green"))
p_ird_prop_c <- p_ird_prop_c + labs(y = expression(atop("Times Voronoi Service Cost", paste("Hello"))))
p_ird_prop_c
p_ird_prop_c <- ggplot(ird_prop_dt, aes(x = Customers, y = Total.service.cost, fill = Routing))
p_ird_prop_c <- p_ird_prop_c + geom_boxplot()
p_ird_prop_c <- p_ird_prop_c + scale_x_discrete()
p_ird_prop_c <- p_ird_prop_c + scale_y_continuous(breaks = c(.3, .5, .6, .9, 1.2, 1.5))
p_ird_prop_c <- p_ird_prop_c + geom_hline(yintercept=0.5, linetype="twodash", color = "red", size = 1)
p_ird_prop_c <- p_ird_prop_c + my_theme_11()
p_ird_prop_c <- p_ird_prop_c + scale_fill_manual(values = c("cyan", "green"))
p_ird_prop_c <- p_ird_prop_c + labs(y = expression(atop("Times path-generator", paste("Voronoi-based Service Cost"))))
p_ird_prop_c
p_ird_prop_c <- ggplot(ird_prop_dt, aes(x = Customers, y = Total.service.cost, fill = Routing))
p_ird_prop_c <- p_ird_prop_c + geom_boxplot()
p_ird_prop_c <- p_ird_prop_c + scale_x_discrete()
p_ird_prop_c <- p_ird_prop_c + scale_y_continuous(breaks = c(.3, .5, .6, .9, 1.2, 1.5))
p_ird_prop_c <- p_ird_prop_c + geom_hline(yintercept=0.5, linetype="twodash", color = "red", size = 1)
p_ird_prop_c <- p_ird_prop_c + my_theme_11()
p_ird_prop_c <- p_ird_prop_c + scale_fill_manual(values = c("cyan", "green"))
p_ird_prop_c <- p_ird_prop_c + labs(y = expression(atop("Times Path-Generator", paste("Voronoi-based Service Cost"))))
p_ird_prop_c
milp <- fread("MILP.csv")
milp[, Assignment := as.factor(Assignment)]
milp[, Partition := as.factor(Partition)]
milp[, Routing := as.factor(Routing)]
milp[, Zone := as.factor(Zone)]
milp[, Customers := as.factor(Customers)]
milp[, Ratio := as.factor(Ratio)]
milp[, Distribution := as.factor(Distribution)]
milp[, Limit := as.factor(Limit)]
milp[, Parameter := as.factor(Parameter)]
milp <- milp[Customers %in% c(8, 12, 16)]
milp <- milp[Cost != -1]
milp[Assignment == 'LL-EP', Assignment := 'DIST(ra)']
milp[Routing == 'BB', Routing := 'BnB']
milp[Assignment == 'DIST(ra)', Approach := paste(Assignment, Routing, sep = "-")]
milp[Assignment == 'MILP', Approach := Assignment]
milp$Approach <- factor(milp$Approach, levels = c('MILP', 'DIST(ra)-BnB'))
milp[, Total.service.cost := Dedicated.cost + Service.cost]
milp_prop_f <- function(sd) {
baseline <- sd[Approach == "MILP", -1, with = FALSE]
other <- sd[Approach != "MILP", -1, with = FALSE]
if(nrow(baseline) == 1 & nrow(other) == 1){
other[1] / baseline[1]
}
}
sd_cols_milp <- c("Approach", "Cost", "Service.cost", "Total.service.cost", "Elapsed.time")
milp_prop_dt <- milp[, milp_prop_f(.SD), by = list(Seed, Customers), .SDcols = sd_cols_milp]
p_milp_c <- ggplot(milp_prop_dt, aes(x = Customers, y = Total.service.cost))
p_milp_c <- p_milp_c + geom_boxplot(fill = "#56B4E9")
p_milp_c <- p_milp_c + scale_x_discrete()
p_milp_c <- p_milp_c + scale_y_continuous(breaks = c(1.0, 1.25, 1.5, 1.75, 2.0))
p_milp_c <- p_milp_c + geom_hline(yintercept=1.5, linetype="twodash", color = "red", size = 1)
p_milp_c <- p_milp_c + my_theme_none()
p_milp_c <- p_milp_c + labs(y = "Times MILP Service Cost")
p_milp_c
p_milp_t <- ggplot(milp_prop_dt, aes(x = Customers, y = Elapsed.time))
p_milp_t <- p_milp_t + geom_boxplot(fill = "#56B4E9")
p_milp_t <- p_milp_t + scale_x_discrete()
p_milp_t <- p_milp_t + scale_y_log10(breaks = c(1, 1e-1, 1e-2, 1e-3))
p_milp_t <- p_milp_t + geom_hline(yintercept=1.0, linetype="twodash", color = "red", size = 1)
p_milp_t <- p_milp_t + my_theme_none()
p_milp_t <- p_milp_t + labs(y = "Times MILP Processing Time")
p_milp_t
multiplot(p_milp_c, p_milp_t, cols = 2)
p_milp_c <- ggplot(milp_prop_dt, aes(x = Customers, y = Total.service.cost))
p_milp_c <- p_milp_c + geom_boxplot(fill = "#56B4E9")
p_milp_c <- p_milp_c + scale_x_discrete()
p_milp_c <- p_milp_c + scale_y_continuous(breaks = c(1.0, 1.25, 1.5, 1.75, 2.0))
p_milp_c <- p_milp_c + geom_hline(yintercept=1.4, linetype="twodash", color = "red", size = 1)
p_milp_c <- p_milp_c + my_theme_none()
p_milp_c <- p_milp_c + labs(y = "Times MILP Service Cost")
p_milp_c
p_milp_c <- ggplot(milp_prop_dt, aes(x = Customers, y = Total.service.cost))
p_milp_c <- p_milp_c + geom_boxplot(fill = "#56B4E9")
p_milp_c <- p_milp_c + scale_x_discrete()
p_milp_c <- p_milp_c + scale_y_continuous(breaks = c(1.0, 1.25, 1.5, 1.75, 2.0))
p_milp_c <- p_milp_c + geom_hline(yintercept=1.42, linetype="twodash", color = "red", size = 1)
p_milp_c <- p_milp_c + my_theme_none()
p_milp_c <- p_milp_c + labs(y = "Times MILP Service Cost")
p_milp_c
p_milp_c <- ggplot(milp_prop_dt, aes(x = Customers, y = Total.service.cost))
p_milp_c <- p_milp_c + geom_boxplot(fill = "#56B4E9")
p_milp_c <- p_milp_c + scale_x_discrete()
p_milp_c <- p_milp_c + scale_y_continuous(breaks = c(1.0, 1.25, 1.5, 1.75, 2.0))
p_milp_c <- p_milp_c + geom_hline(yintercept=1.5, linetype="twodash", color = "red", size = 1)
p_milp_c <- p_milp_c + my_theme_none()
p_milp_c <- p_milp_c + labs(y = "Times MILP Service Cost")
p_milp_c
p_milp_t <- ggplot(milp_prop_dt, aes(x = Customers, y = Elapsed.time))
p_milp_t <- p_milp_t + geom_boxplot(fill = "#56B4E9")
p_milp_t <- p_milp_t + scale_x_discrete()
p_milp_t <- p_milp_t + scale_y_log10(breaks = c(1, 1e-1, 1e-2, 1e-3))
p_milp_t <- p_milp_t + geom_hline(yintercept=1e-3, linetype="twodash", color = "red", size = 1)
p_milp_t <- p_milp_t + my_theme_none()
p_milp_t <- p_milp_t + labs(y = "Times MILP Processing Time")
p_milp_t
p_milp_c <- ggplot(milp_prop_dt, aes(x = Customers, y = Total.service.cost))
p_milp_c <- p_milp_c + geom_boxplot(fill = "#56B4E9")
p_milp_c <- p_milp_c + scale_x_discrete()
p_milp_c <- p_milp_c + scale_y_continuous(breaks = c(1.0, 1.25, 1.5, 1.75, 2.0))
p_milp_c <- p_milp_c + geom_hline(yintercept=1.5, linetype="twodash", color = "red", size = 1)
p_milp_c <- p_milp_c + my_theme_none()
p_milp_c <- p_milp_c + labs(y = "Times MILP Service Cost")
p_milp_c
p_milp_t <- ggplot(milp_prop_dt, aes(x = Customers, y = Elapsed.time))
p_milp_t <- p_milp_t + geom_boxplot(fill = "#56B4E9")
p_milp_t <- p_milp_t + scale_x_discrete()
p_milp_t <- p_milp_t + scale_y_log10(breaks = c(1, 1e-1, 1e-2, 1e-3))
p_milp_t <- p_milp_t + geom_hline(yintercept=1e-3, linetype="twodash", color = "red", size = 1)
p_milp_t <- p_milp_t + my_theme_none()
p_milp_t <- p_milp_t + labs(y = "Times MILP Processing Time")
p_milp_t
multiplot(p_milp_c, p_milp_t, cols = 2)
lab1 <- c(expression(V-NN), expression(dist[ra]-NN), expression(V-BnB), expression(dist[ra]-BnB))
ird_r <- fread("Ratios.csv")
ird_r[, Assignment := as.factor(Assignment)]
ird_r[, Partition := as.factor(Partition)]
ird_r[, Routing := as.factor(Routing)]
ird_r[, Zone := as.factor(Zone)]
ird_r[, Customers := as.factor(Customers)]
ird_r[, Ratio := as.factor(Ratio)]
ird_r[, Distribution := as.factor(Distribution)]
ird_r[, Limit := as.factor(Limit)]
ird_r[, Parameter := as.factor(Parameter)]
ird_r <- ird_r[Cost != -1]
ird_r[Assignment == 'SP-Voronoi', Assignment := 'V']
ird_r[Assignment == 'LL-EP', Assignment := 'DIST(ra)']
ird_r[Routing == 'BB', Routing := 'BnB']
ird_r[, Approach := paste(Assignment, Routing, sep = "-")]
ird_r$Approach <- factor(ird_r$Approach, levels = c('V-NN', 'DIST(ra)-NN', 'V-BnB', 'DIST(ra)-BnB'))
ird_r[, Total.service.cost := Dedicated.cost + Service.cost]
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01()
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
my_theme_01 <- function(base_size = 11, base_family = "") {
# Starts with theme_grey and then modify some parts
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# white panel with light grey border
panel.background = element_rect(fill = "white", colour = NA),
panel.border     = element_rect(fill = NA, colour = "grey70", size = 0.5),
# light grey, thinner gridlines
# => make them slightly darker to keep acceptable contrast
#panel.grid.major = element_line(colour = "grey87", size = 0.25),
#panel.grid.minor = element_line(colour = "grey87", size = 0.125),
# match axes ticks thickness to gridlines and colour to panel border
axis.ticks       = element_line(colour = "grey70", size = 0.25),
# match legend key to panel.background
#legend.key           = element_rect(fill = "white", colour = NA),
#legend.position      = "none",
#legend.background    = element_rect(fill = "white", size = 4, colour = "white"),
legend.background    = element_rect(color = "grey"),
legend.justification = c(0, 1),
legend.position      = c(0, 1),
#legend.title         = element_text(size = 9, lineheight = 0.9, colour = "black", hjust = 1, face="bold"),
legend.title         = element_blank(),
legend.text          = element_text(size = 11, lineheight = 0.9, colour = "black", hjust = 1, margin(l=10)),
#legend.text           = element_text(size = 8, lineheight = 0.9, hjust = 1),
#legend.title          = element_text(size = 9),
# dark strips with light text (inverse contrast compared to theme_grey)
strip.background = element_rect(fill = "grey70", colour = NA),
strip.text       = element_text(colour = "white", size = rel(0.8)),
#axis.title.x = axis_x_title,
#axis.title.y = axis_y_title,
#axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0), size = 9, vjust = 0.5, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0), size = 12, vjust = 0.5),
#axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 9, angle = 90, vjust = 0.5, face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 12, angle = 90, vjust = 0.5),
#axis.text    = element_text(size = 8, lineheight = 0.9, colour = "grey50", hjust = 1),
axis.text    = element_text(size = 10, lineheight = 0.9, colour = "black", hjust = 1),
complete = TRUE
)
}
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01()
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
warnings()
my_theme_01 <- function(base_size = 11, base_family = "") {
# Starts with theme_grey and then modify some parts
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# white panel with light grey border
panel.background = element_rect(fill = "white", colour = NA),
panel.border     = element_rect(fill = NA, colour = "grey70", size = 0.5),
# light grey, thinner gridlines
# => make them slightly darker to keep acceptable contrast
#panel.grid.major = element_line(colour = "grey87", size = 0.25),
#panel.grid.minor = element_line(colour = "grey87", size = 0.125),
# match axes ticks thickness to gridlines and colour to panel border
axis.ticks       = element_line(colour = "grey70", size = 0.25),
# match legend key to panel.background
#legend.key           = element_rect(fill = "white", colour = NA),
#legend.position      = "none",
#legend.background    = element_rect(fill = "white", size = 4, colour = "white"),
legend.background    = element_rect(color = "grey"),
legend.justification = c(0, 1),
legend.position      = c(0, 1),
#legend.title         = element_text(size = 9, lineheight = 0.9, colour = "black", hjust = 1, face="bold"),
legend.title         = element_blank(),
legend.text          = element_text(size = 11, lineheight = 0.9, colour = "black", hjust = 1),
#legend.text           = element_text(size = 8, lineheight = 0.9, hjust = 1),
#legend.title          = element_text(size = 9),
# dark strips with light text (inverse contrast compared to theme_grey)
strip.background = element_rect(fill = "grey70", colour = NA),
strip.text       = element_text(colour = "white", size = rel(0.8)),
#axis.title.x = axis_x_title,
#axis.title.y = axis_y_title,
#axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0), size = 9, vjust = 0.5, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0), size = 12, vjust = 0.5),
#axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 9, angle = 90, vjust = 0.5, face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 12, angle = 90, vjust = 0.5),
#axis.text    = element_text(size = 8, lineheight = 0.9, colour = "grey50", hjust = 1),
axis.text    = element_text(size = 10, lineheight = 0.9, colour = "black", hjust = 1),
complete = TRUE
)
}
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01()
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
my_theme_01 <- function(base_size = 11, base_family = "") {
# Starts with theme_grey and then modify some parts
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# white panel with light grey border
panel.background = element_rect(fill = "white", colour = NA),
panel.border     = element_rect(fill = NA, colour = "grey70", size = 0.5),
# light grey, thinner gridlines
# => make them slightly darker to keep acceptable contrast
#panel.grid.major = element_line(colour = "grey87", size = 0.25),
#panel.grid.minor = element_line(colour = "grey87", size = 0.125),
# match axes ticks thickness to gridlines and colour to panel border
axis.ticks       = element_line(colour = "grey70", size = 0.25),
# match legend key to panel.background
#legend.key           = element_rect(fill = "white", colour = NA),
#legend.position      = "none",
#legend.background    = element_rect(fill = "white", size = 4, colour = "white"),
legend.background    = element_rect(color = "grey"),
legend.justification = c(0, 1),
legend.position      = c(0, 1),
#legend.title         = element_text(size = 9, lineheight = 0.9, colour = "black", hjust = 1, face="bold"),
legend.title         = element_blank(),
legend.text          = element_text(size = 11, lineheight = 0.9, colour = "black", hjust = 1),
#legend.text           = element_text(size = 8, lineheight = 0.9, hjust = 1),
#legend.title          = element_text(size = 9),
# dark strips with light text (inverse contrast compared to theme_grey)
strip.background = element_rect(fill = "grey70", colour = NA),
strip.text       = element_text(colour = "white", size = rel(0.8)),
#axis.title.x = axis_x_title,
#axis.title.y = axis_y_title,
#axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0), size = 9, vjust = 0.5, face="bold"),
axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0), size = 12, vjust = 0.5),
#axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 9, angle = 90, vjust = 0.5, face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 12, angle = 90, vjust = 0.5),
#axis.text    = element_text(size = 8, lineheight = 0.9, colour = "grey50", hjust = 1),
axis.text    = element_text(size = 10, lineheight = 0.9, colour = "black", hjust = 1),
complete = TRUE
)
}
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.margin = margin(6, 6, 6, 6))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.box.margin = margin(6, 6, 6, 6))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.justification = c("right", "top"))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.justification = c("left", "top"))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.justification = c("left", "top"), legend.box.just = "right")
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.justification = c("left", "top"), legend.box.just = "left")
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.margin = margin(10, 20, 30, 40))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.text.align = "left")
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.text.margin = margin(6, 6, 6, 6))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.key.width = width(6))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.key.width = 6)
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.key.width = unit(5,"cm"))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.text.width = unit(5,"cm"))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + guides(fill = guide_legend(label.position = "left", label.hjust = 1))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + guides(fill = guide_legend(label.margin = margin(6, 6, 6, 6)))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + guides(fill = guide_legend(label.margin = margin(6, 6, 6, 10)))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + guides(fill = guide_legend(label.margin = margin(6, 6, 6, 20)))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.key.width = unit(.5, "cm"))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.key.width = unit(.3, "cm"))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
p_ird_r_d <- ggplot(ird_r, aes(x = Ratio, y = Avg.detour, fill = Approach))
p_ird_r_d <- p_ird_r_d + geom_boxplot()
p_ird_r_d <- p_ird_r_d + scale_x_discrete()
p_ird_r_d <- p_ird_r_d + my_theme_01() + theme(legend.text = element_text(margin = margin(l = 50), hjust = 0))
p_ird_r_d <- p_ird_r_d + theme(axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0), size = 10, angle = 90, vjust = 0.5))
p_ird_r_d <- p_ird_r_d + scale_fill_manual(values = c("#F0E442", "#D55E00", "#009E73", "#56B4E9"), labels = lab1)
p_ird_r_d <- p_ird_r_d + labs(x = "Ratio customers / drivers")
p_ird_r_d <- p_ird_r_d + labs(y = "Avg. Detour (times original distance)")
p_ird_r_d
